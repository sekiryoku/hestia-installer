#!/usr/bin/env bash
set -euo pipefail

# ==============================
#  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
# ==============================
HOSTNAME=${HOSTNAME:-"panel.example.com"}
USERNAME=${USERNAME:-"admin123"}
EMAIL=${EMAIL:-"admin@example.com"}
PASSWORD=${PASSWORD:-"346@1MuXpl'e+TR"}
PHP_VERSION=${PHP_VERSION:-"8.4"}

# ==============================
#  –§—É–Ω–∫—Ü–∏–∏
# ==============================

disable_auto_updates() {
  echo "üßØ –û—Ç–∫–ª—é—á–∞—é –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
  systemctl stop unattended-upgrades apt-daily apt-daily-upgrade >/dev/null 2>&1 || true
  systemctl disable unattended-upgrades apt-daily apt-daily-upgrade >/dev/null 2>&1 || true
  echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã."
}

enable_auto_updates() {
  echo "üîÑ –í–∫–ª—é—á–∞—é –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ..."
  systemctl enable unattended-upgrades apt-daily apt-daily-upgrade >/dev/null 2>&1 || true
  systemctl start unattended-upgrades apt-daily apt-daily-upgrade >/dev/null 2>&1 || true
  echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–µ–Ω—ã."
}

wait_for_apt() {
  echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ apt/dpkg..."
  local timeout=600  # –º–∞–∫—Å–∏–º—É–º 10 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è
  local interval=10
  local elapsed=0

  while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || \
        fuser /var/lib/dpkg/lock >/dev/null 2>&1 || \
        pgrep -x "apt" >/dev/null || \
        pgrep -x "apt-get" >/devnull || \
        pgrep -x "unattended-upgrade" >/dev/null; do
    if [ "$elapsed" -ge "$timeout" ]; then
      echo "‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è apt –∏—Å—Ç–µ–∫–ª–æ (10 –º–∏–Ω—É—Ç). –ü—Ä–µ—Ä—ã–≤–∞—é."
      exit 1
    fi
    echo "‚öôÔ∏è  APT –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ñ–¥—É –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è..."
    sleep "$interval"
    elapsed=$((elapsed + interval))
  done
  echo "‚úÖ APT —Å–≤–æ–±–æ–¥–µ–Ω ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É!"
}

ensure_wget() {
  if ! command -v wget >/dev/null 2>&1; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é wget..."
    apt-get update -y
    apt-get install -y wget
  fi
}

# –ù–∞ –ª—é–±–æ–π –≤—ã—Ö–æ–¥ —Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
trap 'enable_auto_updates' EXIT

# ==============================
#  –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# ==============================

disable_auto_updates
wait_for_apt
ensure_wget

echo "‚¨áÔ∏è  –°–∫–∞—á–∏–≤–∞—é —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ HestiaCP..."
wget -q https://raw.githubusercontent.com/hestiacp/hestiacp/release/install/hst-install.sh -O hst-install.sh

if [ ! -f "hst-install.sh" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç!"
  exit 1
fi

echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É HestiaCP..."
bash hst-install.sh \
  --interactive no \
  --hostname "$HOSTNAME" \
  --username "$USERNAME" \
  --email "$EMAIL" \
  --password "$PASSWORD" \
  --apache no \
  --named no \
  --clamav no \
  --spamassassin no \
  --mysql no \
  --multiphp "$PHP_VERSION" \
  --quota no \
  --webterminal no \
  --iptables no \
  --fail2ban no \
  --force

# –ï—Å–ª–∏ –¥–æ–±—Ä–∞–ª–∏—Å—å —Å—é–¥–∞ ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ (set -e)
IP=$(hostname -I | awk '{print $1}')
echo
echo "============================================================"
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ HestiaCP –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–ü–∞–Ω–µ–ª—å: https://$IP:8083"
echo "Username: $USERNAME"
echo "Password: $PASSWORD"
echo "============================================================"

# ==============================
#  –ü–∞—Ç—á–∏–º —à–∞–±–ª–æ–Ω—ã Nginx
# ==============================
echo "‚öôÔ∏è  –í–Ω–æ—à—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω—ã Hestia (default.tpl –∏ default.stpl)..."
TEMPLATE_DIR="/usr/local/hestia/data/templates/web/nginx/php-fpm"

for FILE in "$TEMPLATE_DIR/default.tpl" "$TEMPLATE_DIR/default.stpl"; do
  if [ -f "$FILE" ]; then
    cp "$FILE" "${FILE}.bak_$(date +%F_%H-%M-%S)"
    if grep -q "try_files \$uri \$uri/ /index.html;" "$FILE"; then
      echo "‚ö†Ô∏è  –í $FILE —Å—Ç—Ä–æ–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é."
    else
      sed -i '/location \/ {/a\    try_files $uri $uri/ /index.html;' "$FILE"
    fi
  else
    echo "‚ùå –§–∞–π–ª $FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
  fi
done

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
if nginx -t; then
  echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞."
else
  echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ –≤ —à–∞–±–ª–æ–Ω–µ. –ü—Ä–æ–≤–µ—Ä—å –≤—Ä—É—á–Ω—É—é!"
fi

echo "üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!"